#!/bin/bash

set -e

APP=$1
NAME=$2
SOCKET=$3
SERVICE=$4
SERVICES=(${@:5})


function check_socket_status () {
    echo "Checking status for $SERVICE"
    if [ -S "$SOCKET" ]; then
        echo "There is a socket..."
        if [ ! -z "$(docker ps -q --filter status=running --filter name=$TARGET_CONTAINER)"  ]; then
            echo "Service seems to be running already: $TARGET_CONTAINER"
            exit 0
        else
            echo "Removing stale socket: $SOCKET"
            rm $SOCKET;
        fi
    fi
}


if [[ $SOCKET == /* ]]; then
    DC_FILE=/var/lib/controller/$NAME/docker-compose.yml
    DC="/usr/local/bin/docker-compose -p $APP -f $DC_FILE --skip-hostname-check --no-ansi"
    echo "Spawning services: ${SERVICES[@]}"
    cores=$(fgrep -c processor /proc/cpuinfo)
    export COMPOSE_IGNORE_ORPHANS=true
    export DOCKER_HOST=unix:///fat/docker.sock
    TARGET_CONTAINER="${APP}_${SERVICE}_1"

    function start_container () {
        check_socket_status
        echo "Using $cores cores to initiate container"
        printf '%s\n' "${SERVICES[@]}" | xargs --max-procs=$cores  \
                                               --replace \
                                               /bin/sh -c "echo starting {} && $DC up -d --no-build --no-recreate {}"
    }
    if [ ! -z "$USE_CRIU" ]; then
        /usr/local/bin/restore-from-checkpoint $SERVICE $TARGET_CONTAINER || start_container
    else
        start_container
    fi
    touch $DC_FILE;
fi
